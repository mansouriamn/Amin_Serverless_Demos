		Amazon event bridge and custom event bus for Inventory Service


We will create a custom event bus (Kitchen-Manager-Bus) that will accept an event from the 
ordering service (Ordering-Service lambda function), and then send the event to the Inventory
service ( Inventory-Service lambda function). Inventory service will start re-filling inventory.
 
Ordering Service (Lambda) ----> Kitchen Manager (Event bridge custom event bus) -----> Inventory Service (Lambda function)

Create the Ordering Service

1- Create a lambda function and call it "Ordering-Service" and paste the following python code.

import json
import boto3
import datetime

client = boto3.client('events')

def lambda_handler(event, context):
        
    response = client.put_events(
        Entries=[
            {
            'Source': 'Lambda',
            'DetailType': 'Ordering-Service',
            'Detail': json.dumps(event),
            'EventBusName': 'arn:aws:events:us-east-2:511349353831:event-bus/Inventory-Event-Bus',
             },
                ]
             )
        
    return response

Update the Lambda IAM role to publish to event bridge

2- Open function, click the "Configuration" tab and click "Permissions" on the left.
3- in the "Execution Role" box, click the role name.
4- In the Permissions tab click "Add Permissions" then "Attach Policies"
5- Click "Create Policy" and choose the "Event Bridge" service.
6- Exapnd "Write", and select "Put Events"
7- Select "All resources" and click next, and click next again.
8- Provide a name "Event_Bridge_Event_Publisher_Policy" and click "create policy".
9- Add this policy to the IAM role.

Create Kitchen Manager Event bus

10- Open event bridge to create your custom event bus. 
11- Click "Event Buses" on the left and click "Create Event Bus".
12- Provide the name "Kitchen-Manager-Event-Bus" and click create.
13- Copy the event bus arn and paste in your Ordering-Service lambda fucntion and click "deploy" in your function.
14- Create a test event for the lambda finction "Ordering-Service" like below.

{
  "Order": "10 donuts",
  "Inventory-Update-Required": "yes",
  "Ingredient": "flour",
  "Amount": "1 pound"
}

Create the Inventory Service Lambda Function

15- Create a pyhton lambda function with the following code and call it "Inventory-Service".

import json

def lambda_handler(event, context):
    Amount = event['detail']['Amount'];
    Ingredient = event['detail']['Ingredient'];
    print('Updating inventory with ' + Amount + ' ' + 'of ' + Ingredient);
    return {
        'statusCode': 200,
        'body': json.dumps('Hello from Lambda!')
    }

Create Event rules for "Kitchen-Manager-Event-Bus"

16- Open Event bridge and click "Rules" on the left hand side. 
17- Click "Create Rules", and provide a rule name "How-to-handle-orders".
18- under "Evnt bus" select "Kitchen-Manager-Event-Bus" and click next
19- In the event pattern box click "Custom Patterns", and paste the following and click next.

{
  "detail": {
    "Inventory-Update-Required": ["yes"]
  }
}

20- In the target box select lambda and select your "Inventory-Service" function as the 
target, click next and click create rule.
21- Run the test on the "Ordering-Service" lambda function and the Inventory service should log
it all in cloudwatch logs. 
22- Open Inventory-Service and click monitor and then view logs in cloudwatch.

